<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">
<!-- We need the <beans> tag and its configurations in order for this xml to be used for Spring -->
<!-- You can always looks this up if you need it -->

<!-- This is the only thing we need in our applicationContext.xml when using annotation-driven bean declaration -->
<!-- Because the rest of it will be done with annotations in our model classes -->
<context:component-scan base-package="com.revature"></context:component-scan>



<!-- Below is us declaring and wiring beans in XML (which we usually don't prefer over using @Autowired) -->
<!-- We still do need the applicationContext though, just to indicate that we're scnnaing for @Autowired) -->


<!--  Account Bean --> 

<!-- <bean name="account" class="com.revature.models.Account"></bean> -->

<!--  User Bean --> 

<!-- <bean name="user" class="com.revature.models.User"> -->
	<!-- The User Class has a Account as one of its fields. So we need to WIRE the account with the property tag--> 
<!-- 	<property name = "account" ref="account"></property> -->
	<!-- name is the name of the field in the USer class, ref is the name of the bean --> 
<!-- </bean> -->


</beans>